Требуется создать нейронную сеть для автоматической торговли на валютной паре XAUUSD60 путем формирования сигналов открытия позиций. Входные данные для сети содержатся в файле 'Nero_XAUUSD60.csv'.
Файл представляет собой трехмерный массив таймсерию. Но содержит информацию не о барах, а о фракталах. Поэтому временной интервал между строками данных в файле будет разный. Фракталом будем называть ценовую формацию из трех бар, в которой цена меняет свое направление. Другими словами фрактал – это либо пик (когда средний бар выше предыдущего и последующего), либо впадина (когда средний бар ниже предыдущего и последующего). 
Итак, файл формируется следующим образом. При формировании на графике цены очередного фрактала в файл записывается строка. В первой ячейке строки записывается время формирования этого фрактала. Далее записывается массив списков. Каждый элемент массива – это список (назовем данный список ‘fractal’), содержащий информацию об определенном фрактале. Таким образом, каждая строка файла содержит ячейку со временем и [n] ячеек с информацией о последних [n] фракталах. 
Time ; fractal[1] ; fractal[2]; … ; fractal[n]
Каждая ячейка ‘fractal[]’ содержит список параметров фрактала, с разделителем ‘:’.  Структура данного списка следующая.
shift : price : direction : front : back : strong : break : reverse : power : count : impulse 
Значения данных параметров следующие.
shift(int) – сдвиг в барах относительно текущего (последнего) фрактала;
price(float) – значение цены фрактала;
direction(char) – направление разворота фрактала (1=пик, или -1=впадина);
front(float) – величина переднего фронта – движение, предшествующее фракталу; 
back(float) – величина заднего фронта – движение, последующее после фрактала;
strong(bool) – признак уникальности, т.е. данный фрактал может являться сигналом для открытия сделки с большим отношением profit/loss;
break(char) – признак того, что фрактал был пробит последующими ценовыми движениями;
reverse(char) – признак того, что фрактал пробил хотя бы один из предшествующих ему фракталов;
power(float) – сила (значимость, относительный рейтинг) фрактала;
count(char) – количество совпадений по значению цены с остальными фракталами (влияет на силу);
impulse(float) – импульс цены (скорость разворота), который задал данный фрактал.

Все эти значения пересчитываются и обновляются с каждым новым фракталом, поэтому данные из файла нельзя подавать на вход нейронной сети в виде скользящего временного окна. Каждый цикл на вход нейронной сети нужно подавать всю строку (массив списков) целиком. На каждом следующем цикле полностью обновлять входные данные нейронной сети значениями новой строки.
Упорядочивание:
Напиши программу на Python для предварительной обработки данных файла. Для начала нужно отсортировать каждую строку файла (массив fractal[1] ; fractal[2] ; … ; fractal[n]) по возрастанию значения ‘shift’. 
Нормализация:
Как ты считаешь, нужно ли нормализовать эти данные. 
Приведу пример из нескольких ячеек переменной 'sorted_data':
17.04.2023 20:30	12:1995.9:1:14.8:1.7:0:0:1:34.1:5:2.3	13:1987.2:-1:4.9:8.7:0:0:0:34.1:1:2.3	14:1992.1:1:11.0:4.9:0:3:0:34.1:2:2.3	6:1981.1:-1:67.5:14.8:0:0:1:34.1:1:2.3	11:2010.6:1:5.7:29.5:0:0:0:34.1:2:2.3
17.04.2023 21:30	31:1995.9:1:14.8:1.9:0:0:1:6.5:5:1.2	15:1987.2:-1:4.9:8.7:0:0:0:6.5:1:1.2	61:1992.1:1:11.0:4.9:0:3:0:6.5:2:1.2	18:1981.1:-1:67.5:14.8:0:0:1:6.5:1:1.2	13:2010.6:1:5.7:29.5:0:0:0:6.5:2:1.2
17.04.2023 22:00	4:1995.9:1:14.8:1.9:0:3:1:4.1:5:1.4	6:1987.2:-1:4.9:9.9:0:0:0:4.1:1:1.4	7:1992.1:1:11.0:4.9:0:3:0:4.1:2:1.4	9:1981.1:-1:67.5:16.0:0:0:1:4.1:1:1.4	14:2010.6:1:5.7:29.5:0:0:0:4.1:2:1.4
17.04.2023 23:00	6:1995.9:1:14.8:1.9:0:5:1:2.6:5:1.1	8:1987.2:-1:4.9:9.9:0:0:0:2.6:1:1.1	9:1992.1:1:11.0:4.9:0:3:0:2.6:2:1.1	11:1981.1:-1:67.5:16.0:0:0:1:2.6:1:1.1	16:2010.6:1:5.7:29.5:0:0:0:2.6:2:1.1
18.04.2023 1:30	9:1995.9:1:14.8:1.9:0:6:1:8.4:5:0.8	11:1987.2:-1:4.9:9.9:0:0:0:8.4:1:0.8	12:1992.1:1:11.0:4.9:0:3:0:8.4:2:0.8	14:1981.1:-1:67.5:16.0:0:0:1:8.4:1:0.8	19:2010.6:1:5.7:29.5:0:0:0:8.4:2:0.8
18.04.2023 2:30	11:1995.9:1:14.8:1.9:0:6:1:36.0:6:0.8	13:1987.2:-1:4.9:9.9:0:0:0:36.0:1:0.8	14:1992.1:1:11.0:4.9:0:3:0:36.0:2:0.8	16:1981.1:-1:67.5:16.0:0:0:1:36.0:1:0.8	21:2010.6:1:5.7:29.5:0:0:0:36.0:2:0.8
18.04.2023 3:30	13:1995.9:1:14.8:1.9:0:6:1:8.0:6:1.3	15:1987.2:-1:4.9:9.9:0:0:0:8.0:1:1.3	16:1992.1:1:11.0:4.9:0:3:0:8.0:2:1.3	18:1981.1:-1:67.5:16.0:0:0:1:8.0:1:1.3	23:2010.6:1:5.7:29.5:0:0:0:8.0:2:1.3
18.04.2023 4:30	15:1995.9:1:14.8:1.9:0:8:1:9.8:6:1.9	17:1987.2:-1:4.9:9.9:0:0:0:9.8:1:1.9	18:1992.1:1:11.0:4.9:0:3:0:9.8:2:1.9	20:1981.1:-1:67.5:16.0:0:0:1:9.8:1:1.9	25:2010.6:1:5.7:29.5:0:0:0:9.8:2:1.9
18.04.2023 5:00	16:1995.9:1:

Потом необходимо нормализовать значения ‘price’ так же отдельно для массива каждой строки. 


